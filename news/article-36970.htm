<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashagent.github.io/news/article-36970.htm" />
    <meta charset="utf-8">
    <title>微信APP支付V3版本签名 APP下单/订单查询接口Python版实现</title>
        <meta name="description" content="问题背景 最近接入微信支付，微信官方并没有提供Python版的服务端SDK，因而只能根据文档手动实现一版，这里记录一下微信支付的整体流程、踩坑过程与最终具体实现。 微信支付APP下单流程 根据微信官方" />
        <link rel="icon" href="/assets/website/img/clashagent/favicon.ico" type="image/x-icon"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
    <link href="/assets/website/css/clashagent/css2.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/all.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/animate.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/tempusdominus-bootstrap-4.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/style.css" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LD3WVPKQBJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LD3WVPKQBJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="container-xxl bg-white p-0">
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div class="container-xxl position-relative p-0">
                        <nav class="navbar navbar-expand-lg navbar-dark bg-dark px-4 px-lg-5 py-3 py-lg-0">
                <a href="/" class="navbar-brand p-0 xcblog-blog-logo">
                                        <span class="text-primary m-0">Clash Agent</span>
                                    </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                    <span class="fa fa-bars"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <div class="navbar-nav ms-auto py-0 pe-4">
                                                <a href="/" class="nav-item nav-link">首页</a>
                                                <a href="/free-nodes/" class="nav-item nav-link">免费节点</a>
                                                <a href="/paid-subscribe/" class="nav-item nav-link">推荐机场</a>
                                                <a href="/news/" class="nav-item nav-link">新闻资讯</a>
                                                <a href="#" class="nav-item nav-link">关于</a>
                        <a href="#" class="nav-item nav-link">联系</a>
                    </div>
                </div>
            </nav>
            <div class="container-xxl py-5 bg-dark hero-header mb-5">
                <div class="container text-center my-5 pt-5 pb-4">
                    <h1 class="display-3 text-white mb-3 animated slideInDown">微信APP支付V3版本签名 APP下单/订单查询接口Python版实现</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center text-uppercase">
                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                            <li class="breadcrumb-item text-white active" aria-current="page">正文</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
        <div class="container-xxl py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<h2 id="问题背景">问题背景</h2> <p>最近接入微信支付，微信官方并没有提供Python版的服务端SDK，因而只能根据文档手动实现一版，这里记录一下微信支付的整体流程、踩坑过程与最终具体实现。</p> <h2 id="微信支付app下单流程">微信支付APP下单流程</h2> <p>根据微信官方文档:<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_5_2.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_5_2.shtml</a><br /> 下单流程如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6f2196b37e8631dfecd9b61a8399317b.jpg" alt="微信APP支付V3版本签名 APP下单/订单查询接口Python版实现"><br /> 和支付宝不同，微信多了一个预付单的概念，这里把APP下单实际分为四大部分，其中包含请求微信后端需要的首次签名和需要返回给APP的二次支付信息签名--<font color="red">这里踩一个小坑</font>，流程图中并没把第二次签名支付信息需要返回给APP的步骤画出来(即下面的步骤6.5)，因而一开始误以为只需要返回prepay_id给客户端，导致校验失败。<br /> 一. 对应步骤1~4，APP 请求业务后端，业务后台进行V3签名后，请求微信后端生成预付单prepay_id<br /> 二. 对应步骤5~6.5，业务后端收到微信后端返回prepay_id，将支付相关参数打包进行二次签名后返回给APP，这里相比流程图多了一个6.5--即业务后端返回签名支付信息到APP<br /> 三. 对应步骤7~18，APP收到业务后端返回签名支付信息后调起SDK发起支付请求，收到同步消息结果通知<br /> 四. 对应步骤19~22，APP查询业务后端，业务后端通过回调通知或直接查询微信后端返回最终支付结果</p> <h2 id="代码实现">代码实现</h2> <h3 id="首次签名逻辑">首次签名逻辑</h3> <p>第一次请求生成预付单号的签名文档为：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay4_0.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay4_0.shtml</a>, 共5个部分参与签名，其组成格式为：</p> <pre><code>HTTP请求方法\nURL\n请求时间戳\n请求随机串\n请求报文主体\n</code></pre> <p>对应签名代码:</p> <pre><code>class WechatPayDALBase(object):     def __init__(self, mch_appid, mchid, v3key, serial_no, client_key):         self.mch_appid = mch_appid         self.mchid = mchid         self.v3key = v3key         # serial_no可通过openssl直接获取, 例: openssl x509 -in 1900009191_20180326_cert.pem -noout -serial         self.serial_no = serial_no          with open(client_key, 'r') as ifile:             pkey = RSA.importKey(ifile.read())         self.signer = pkcs1_15.new(pkey)      def compute_sign_v3(self, method, url, body):         '''         V3签名逻辑         '''         ts = int(time.time())         nonce = self.generate_nonce()         uparts= parse_url(url)         ustr = uparts.path + ('?{}'.format(uparts.query) if uparts.query else '')         content = '{}\n{}\n{}\n{}\n{}\n'.format(method, ustr, ts, nonce, body)          digest = SHA256.new(content.encode('utf-8'))         sign_v = base64.b64encode(self.signer.sign(digest)).decode('utf-8')         sign_str = 'serial_no="{}",mchid="{}",timestamp="{}",nonce_str="{}",signature="{}"'.format(                     self.serial_no, self.mchid, ts, nonce, sign_v)         return sign_str      def make_headers_v3(self, url, headers=None, body='', method='GET'):         '''         微信支付V3版本签名header生成函数         '''         if not headers:             headers = {}         headers['Accept'] = 'application/json'         sign = self.compute_sign_v3(method, url, body)         auth_info = 'WECHATPAY2-SHA256-RSA2048 {}'.format(sign)         headers['Authorization'] = auth_info         return headers      def generate_nonce(self):         rnd = int(time.time()) + random.randint(100000, 1000000)         nonce = hashlib.md5(str(rnd).encode()).hexdigest()[:16]         return nonce</code></pre> <h3 id="二次签名逻辑">二次签名逻辑</h3> <p>由业务后端返回给APP的二次签名信息文档为：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_4.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_4.shtml</a><br /> 共4个部分参与签名，其组成格式为：</p> <pre><code>应用id\n时间戳\n随机字符串\n预支付交易会话ID\n</code></pre> <p>返回签名支付信息的对应代码：</p> <pre><code>    def get_pay_sign_info(self, prepay_id):         ts = int(time.time())         nonce = self.generate_nonce()         content = '{}\n{}\n{}\n{}\n'.format(self.mch_appid, ts, nonce, prepay_id)          digest = SHA256.new(content.encode('utf-8'))         sign_v = base64.b64encode(self.signer.sign(digest)).decode('utf-8')         return {             'appid': self.mch_appid,             'partnerid': self.mchid,             'timestamp': str(ts),             'noncestr': nonce,             'prepay_id': prepay_id,             'package': 'Sign=WXPay',             'sign': sign_v,         }</code></pre> <h3 id="业务后端查询订单详情">业务后端查询订单详情</h3> <p>文档地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_2.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_2.shtml</a><br /> 代码如下：</p> <pre><code>    def query_order(self, out_trade_no):         '''         查询指定订单信息         '''         url = f'https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/{out_trade_no}?mchid={self.mchid}'         headers = self.make_headers_v3(url)         rsp = requests.get(url, headers=headers)         pay_logger.info('out_trade_no:{}, rsp:{}|{}'.format(out_trade_no, rsp.status_code, rsp.text))         rdct = rsp.json()         return rdct</code></pre> <h3 id="业务后端调用app下单api">业务后端调用APP下单API</h3> <p>文档地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_1.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_1.shtml</a><br /> 代码如下：</p> <pre><code>    def create_order_info(self, data, callback_url):         '''         创建微信预支付订单, 注意包含两次签名过程:         首次签名用于请求微信后端获取prepay_id         二次签名信息返回客户端用于调起SDK支付         '''         url = 'https://api.mch.weixin.qq.com/v3/pay/transactions/app'         ndt = datetime.now()         out_trade_no = self.generate_partner_trade_no(ndt)         data = {             'mchid': self.mchid,             'out_trade_no': out_trade_no,             'appid': self.mch_appid,             'description': data['subject'],             'notify_url': callback_url,             'amount': {                 'currency': 'CNY',                 'total': int(data['price']),             },             'time_expire': (ndt + timedelta(minutes=5)).strftime('%Y-%m-%dT%H:%M:%S+08:00')         }         jdata = json.dumps(data, separators=[',', ':'])         headers = {'Content-Type': 'application/json'}         # 第一次签名, 直接请求微信后端         headers = self.make_headers_v3(url, headers=headers, body=jdata, method='POST')         rsp = requests.post(url, headers=headers, data=jdata)         pay_logger.info('rsp:{}|{}'.format(rsp.status_code, rsp.text))         rdct = rsp.json()         # 第二次签名, 返回给客户端调用         sign_info = self.get_pay_sign_info(rdct['prepay_id'])         return sign_info</code></pre> <h3 id="源码地址">源码地址</h3> <p>试水代码开源，把相关代码分享在了github：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/liuzhi67/wechat-pay-python"  target="_blank" rel="nofollow">https://github.com/liuzhi67/wechat-pay-python</a></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-36818.htm">大型狗粮设备生产线价格表（大型狗粮设备生产线价格表及图片）</a></p>
                                        <p>下一个：<a href="/news/article-36971.htm">和田市宠物店电话地址（和田卖宠物的地方）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36817.htm" title="动物疫苗行业排名榜最新 动物疫苗行业排名榜最新">动物疫苗行业排名榜最新 动物疫苗行业排名榜最新</a></li>
                        <li class="py-2"><a href="/news/article-36818.htm" title="大型狗粮设备生产线价格表（大型狗粮设备生产线价格表及图片）">大型狗粮设备生产线价格表（大型狗粮设备生产线价格表及图片）</a></li>
                        <li class="py-2"><a href="/news/article-36971.htm" title="和田市宠物店电话地址（和田卖宠物的地方）">和田市宠物店电话地址（和田卖宠物的地方）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-free-subscribe-node.htm" title="1月6日→22.7M/S|2025年最新免费节点Sscap4订阅链接地址">1月6日→22.7M/S|2025年最新免费节点Sscap4订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-36970.htm" title="微信APP支付V3版本签名 APP下单/订单查询接口Python版实现">微信APP支付V3版本签名 APP下单/订单查询接口Python版实现</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-7-clash-windows.htm" title="1月7日最新免费节点 | 19.6M/S|2025年Shadowrocket/Clash/SSR/V2ray订阅链接地址">1月7日最新免费节点 | 19.6M/S|2025年Shadowrocket/Clash/SSR/V2ray订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
            <div class="container-fluid bg-dark text-light footer pt-5 mt-5 wow fadeIn" data-wow-delay="0.1s">
        <div class="container">
            <div class="copyright">
                <div class="row">
                    <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                        <p>
                            <a href="/">首页</a> |
                            <a href="/free-node/">免费节点</a> |
                            <a href="/news/">新闻资讯</a> |
                            <a href="/about-us.htm">关于我们</a> |
                            <a href="/disclaimer.htm">免责申明</a> |
                            <a href="/privacy.htm">隐私申明</a> |
                            <a href="/sitemap.xml">网站地图</a>
                        </p>
                        <p class="text-white-50 f-15 mb-0">
                            <a href="/">ClashAgent免费节点分享中文官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-md-6 text-center text-md-end">
                        <div class="footer-menu">
                            <a href="/">Home</a>
                            <a href="#">Cookies</a>
                            <a href="#">Help</a>
                            <a href="#">FQAs</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    <script src="/assets/website/js/frontend/clashagent/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashagent/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashagent/main.js"></script>
    <script src="/assets/website/js/frontend/clashagent/rocket-loader.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
    </div>
</body>

</html>